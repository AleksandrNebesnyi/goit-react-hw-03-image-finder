{"version":3,"sources":["component/Container/Container.styled.js","component/Container/Container.jsx","component/Searchbar/Searchbar.styled.js","component/Searchbar/Searchbar.jsx","api/pixabay-api.jsx","component/ImageGalleryItem/ImageGalleryItem.styled.js","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/ImageGalery.styled.js","component/ImageGallery/ImageGalery.jsx","component/Modal/Modal.styled.js","component/Modal/Modal.jsx","component/Loader/Loader.styled.js","component/Loader/Loader.jsx","component/Button/Button.styled.js","component/Button/Button.jsx","App.js","index.js"],"names":["MainContainer","styled","div","Container","children","Header","header","Form","form","Button","button","ButtonLabel","span","Input","input","Searchbar","state","searchQuery","handleSubmitChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","this","type","Provider","color","size","autocomplete","autoFocus","placeholder","name","onChange","Component","fetchPixabayImages","currentPage","fetch","then","response","ok","json","Promise","reject","Error","Item","li","Img","img","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tags","onClick","largeImageURL","List","ul","ImageGallery","images","map","id","Overlay","ModalStyled","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","defaultProps","LoaderStyled","Loader","height","width","ButtonStyled","ButtonContainer","Status","App","isLoading","showModal","largeImage","status","handleOnSubmit","getImages","a","data","hits","length","info","prevState","scrollOnLoadButton","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItem","fullImageUrl","prevProps","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea824603.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const MainContainer = styled.div`\r\nmax-width: 1440px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\npadding-left: 15px;\r\npadding-right: 15px;\r\n\r\n`; ","import React from 'react';\r\nimport {MainContainer} from './Container.styled'\r\n\r\n\r\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\ntop: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  display: inline-block;\r\n\r\n  min-width: 180px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  border: 0;\r\n  \r\n  background-color: tomato;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n\r\n\r\n`;\r\nexport const ButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n\r\n\r\n`;\r\nexport const Input = styled.input`\r\ndisplay: inline-block;\r\nwidth: 100%;\r\nfont: inherit;\r\nfont-size: 20px;\r\nborder: none;\r\noutline: none;\r\npadding-left: 4px;\r\npadding-right: 4px;\r\n&::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n\r\n`;","import { Component } from 'react';\r\nimport { Header, Form, Button, ButtonLabel, Input } from './Searchbar.styled'\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MdFindReplace } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\n\r\n\r\n\r\nclass Searchbar extends Component {\r\n\r\n  state = {\r\n    searchQuery: \"\",\r\n  }\r\n\r\n  handleSubmitChange = (event) => {\r\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() })\r\n  };\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.searchQuery.trim() === \"\") {\r\n        toast.error('Введите Запрос.', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Header >\r\n        <Form onSubmit={this.handleSubmit} >\r\n          <Button type=\"submit\"  >\r\n            <IconContext.Provider value={{ color: \"ffffff\", size: \"2em\" }}>\r\n              <div>\r\n                <MdFindReplace />\r\n              </div>\r\n            </IconContext.Provider>\r\n\r\n\r\n\r\n            <ButtonLabel>Search</ButtonLabel>\r\n          </Button>\r\n\r\n          <Input\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"searchQuery\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleSubmitChange}\r\n\r\n          />\r\n        </Form>\r\n      </Header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","const API_KEY = \"23744407-6e41977eb223c860dbad454a0\";\r\nconst BASE_URL = \"https://pixabay.com/api/\"\r\n \r\n\r\n function fetchPixabayImages (searchQuery,currentPage) {\r\n\r\nreturn fetch(`${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(response =>{\r\n    if(response.ok) {\r\n        return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка запроса попробуйте позже`));\r\n})\r\n}\r\n\r\n\r\n\r\n\r\nexport default fetchPixabayImages;\r\n\r\n\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\nborder-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n`;\r\n\r\n\r\nexport const Img = styled.img`\r\nwidth: 100%;\r\nheight: 260px;\r\nobject-fit: cover;\r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\nopacity: 1;\r\n\r\n&:hover,\r\n&:focus {\r\n  opacity: 0.9;\r\n  transform: scale(1.02);\r\n  cursor: zoom-in;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;","import PropTypes from 'prop-types';\r\nimport {Item, Img } from './ImageGalleryItem.styled'\r\n\r\nconst ImageGalleryItem = ({ image, onImageClick }) => {\r\n  const fullImage = () => onImageClick(image.largeImageURL);\r\n\r\n  return (\r\n    <Item>\r\n      <Img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        onClick={fullImage}\r\n      />\r\n    </Item>\r\n  );\r\n};\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n  }),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport {List } from './ImageGalery.styled'\r\n\r\nconst ImageGallery = ({ images, onImageClick }) => (\r\n  <List >\r\n    {images.map(image => {\r\n           return (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image}\r\n          onImageClick={onImageClick}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","\r\nimport styled from '@emotion/styled';\r\nexport const Overlay =styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100vw;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: rgba(0, 0, 0, 0.8);\r\nz-index: 1200;\r\n`;\r\n\r\nexport const ModalStyled =styled.div`\r\nmax-width: calc(100vw - 48px);\r\nmax-height: calc(100vh - 24px);\r\n\r\n`;\r\n\r\n\r\n","import { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Overlay, ModalStyled } from './Modal.styled'\r\nimport { Component } from 'react';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        // console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        // console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n      }\r\n    \r\n      handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n          // console.log('Нажали ESC, нужно закрыть модалку');\r\n    \r\n          this.props.onClose();\r\n        }\r\n      };\r\n    \r\n      handleBackdropClick =event =>{\r\n        // console.log('Кликнули в бекдроп');\r\n        if(event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n      }\r\n\r\n\r\n    render()\r\n    {\r\nreturn(\r\n    createPortal (\r\n        <Overlay onClick={this.handleBackdropClick}>\r\n        <ModalStyled>{this.props.children}</ModalStyled>\r\n      </Overlay>,\r\n      modalRoot,\r\n        )\r\n);\r\n\r\n    }\r\n}\r\n\r\nModal.defaultProps = {\r\n      children: null,\r\n     };\r\n    \r\n     Modal.propTypes = {\r\n       children: PropTypes.node,\r\n       onClose: PropTypes.func.isRequired,\r\n     };\r\n\r\nexport default Modal;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const LoaderStyled =styled.div`\r\ndisplay: grid;\r\nplace-content: center;\r\n\r\n`;","import Template from 'react-loader-spinner';\r\nimport {Component} from 'react';\r\nimport {LoaderStyled} from './Loader.styled'\r\n\r\n\r\nclass Loader extends Component { \r\n   render() {\r\n     return (\r\n       <LoaderStyled>\r\n         <Template type=\"TailSpin\" color=\"#02be6e\" height={100} width={100} />\r\n       </LoaderStyled>\r\n     );\r\n   }\r\n }\r\n\r\nexport default Loader;","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n\r\nmargin: 0 auto;\r\n  margin-top: 20px;\r\n  width: 100px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    :focus {\r\n      background-color: #303f9f;\r\n    }\r\n\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\nmargin-bottom: 12px;\r\n`;\r\n\r\n","import propTypes from \"prop-types\";\r\nimport {ButtonStyled, ButtonContainer} from './Button.styled'\r\n\r\nfunction Button (props) {\r\n  return (\r\n    <ButtonContainer>\r\n\r\n<ButtonStyled \r\n    onClick={props.onClick}>\r\n      load more\r\n    </ButtonStyled>\r\n    </ButtonContainer>\r\n   \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nButton.propTypes = {\r\n  onClick: propTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Button;","import { Component } from \"react\";\r\nimport Container from \"./component/Container/Container\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from \"./component/Searchbar/Searchbar\";\r\nimport fetchPixabayImages from './api/pixabay-api.jsx';\r\nimport ImageGallery from \"./component/ImageGallery/ImageGalery\";\r\nimport Modal from './component/Modal/Modal';\r\nimport Loader from \"./component/Loader/Loader\";\r\nimport Button from \"./component/Button/Button\";\r\n// import ErrorMessage from \"./component/ErrorMessage/ErrorMasage\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nclass App extends Component {\r\n  state ={\r\n    searchQuery :\"\",\r\n    currentPage : 1,\r\n    isLoading :false,\r\n    images: [],\r\n    error: null,\r\n    showModal: false,\r\n    largeImage: '',\r\n    status: Status.IDLE,\r\n\r\n\r\n  }\r\n  \r\n\r\n// Стартовый метод.\r\n// Если при обновлении запрос не равен между стейтами, тогда делаем фетч\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n       this.setState({ status: Status.PENDING });\r\n       this.getImages();\r\n     }\r\n   }\r\n\r\n// Принимаем с формы запрос и пишем в стейт + сбрасываем после отправки значения из стейта\r\nhandleOnSubmit = searchQuery => {\r\n    \r\n  this.setState({\r\n       \r\n    searchQuery,\r\n    images:[],\r\n    currentPage:1,\r\n    error:null,\r\n    }) };\r\n\r\n\r\n// Получаем дату из фетча\r\n  getImages = async () => {\r\n   const { currentPage, searchQuery } = this.state;\r\n\r\n   this.setState({\r\n    isLoading: true,\r\n    });\r\n\r\n    \r\n    try {\r\n     const  hits  = await fetchPixabayImages(searchQuery , currentPage).then(( data ) => data.hits);\r\n\r\n     if ( hits.length === 0) {\r\n       toast.info('Введите валидний запрос')\r\n     }\r\n    //  console.log(hits);\r\n \r\n  \r\n this.setState(prevState => ({\r\n        images: [...prevState.images, ...hits],\r\n        currentPage: prevState.currentPage + 1,\r\n        status: Status.RESOLVED,\r\n      }));\r\n\r\n     if (currentPage !== 1) {\r\n       this.scrollOnLoadButton();\r\n      }\r\n    } catch (error) {\r\n            // console.log(error);\r\n        \r\n       this.setState({ \r\n         error,\r\n         status: Status.REJECTED });\r\n        \r\n        toast.error(`${error}`,{\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n         \r\n          })\r\n     } finally {\r\n       this.setState({\r\n         isLoading: false,\r\n       });\r\n     }\r\n   };\r\n//  Скролл при клике на кнопку\r\n   scrollOnLoadButton = () => {\r\n     window.scrollTo({\r\n       top: document.documentElement.scrollHeight,\r\n       behavior: 'smooth',\r\n     });\r\n   };\r\n\r\n\r\n   toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n      largeImage: '',\r\n    }));\r\n  };\r\n   \r\n   \r\n   // Получает полное изображение, пишет его в стейт и открывает модалку\r\n  handleGalleryItem = fullImageUrl => {\r\n     this.setState({\r\n      largeImage: fullImageUrl,\r\n      showModal: true,\r\n     });\r\n   };\r\n   \r\n\r\n\r\n\r\nrender(){\r\n\r\n  const { images, isLoading, showModal, largeImage, error } = this.state;\r\n   \r\nreturn(\r\n\r\n\r\n  <Container>\r\n{/* \r\n      if (status === 'idle') {\r\n      return <Searchbar onSubmit={this.handleOnSubmit}/>;\r\n    }\r\n\r\n    if (status === 'pendind') {\r\n      return  <Loader />\r\n    }\r\n\r\n    if (status === ''rejected'') {\r\n      return <Error message={error.message} />;\r\n    }\r\n     if (status === 'resolved') {\r\n      return {\r\n        <ImageGallery images={images} onImageClick={this.handleGalleryItem} />;\r\n        <Modal\r\n          onClose={this.toggleModal}>\r\n            <img src={largeImage} alt=\"\" className=\"Modal-image\" />\r\n                            \r\n           </Modal>   \r\n           <Button onClick={this.getImages} />   \r\n    \r\n    };\r\n    } */}\r\n\r\n\r\n    <Searchbar onSubmit={this.handleOnSubmit}/>\r\n\r\n    <ImageGallery images={images} onImageClick={this.handleGalleryItem} />\r\n\r\n    {!isLoading && images.length >= 12&& <Button onClick={this.getImages} />}\r\n\r\n    {showModal && (\r\n         <Modal\r\n          onClose={this.toggleModal}>\r\n            <img src={largeImage} alt=\"\" className=\"Modal-image\" />\r\n                            \r\n          </Modal>  \r\n     )}\r\n\r\n    {isLoading && <Loader />}\r\n    {/* {error && (\r\n         <ErrorMessage message={error.message} />\r\n         \r\n         \r\n                 )} */}\r\n    \r\n    <ToastContainer autoClose={3000} />\r\n\r\n  </Container>\r\n)\r\n} \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n\r\n"],"sourceRoot":""}