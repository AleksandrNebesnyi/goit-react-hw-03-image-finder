{"version":3,"sources":["component/Container/Container.styled.js","component/Container/Container.jsx","component/Searchbar/Searchbar.styled.js","component/Searchbar/Searchbar.jsx","api/pixabay-api.jsx","component/ImageGalleryItem/ImageGalleryItem.styled.js","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/ImageGalery.styled.js","component/ImageGallery/ImageGalery.jsx","component/Modal/Modal.styled.js","component/Modal/Modal.jsx","component/Loader/Loader.styled.js","component/Loader/Loader.jsx","component/Button/Button.styled.js","component/Button/Button.jsx","component/ErrorMessage/ErrorMasage.jsx","App.js","index.js"],"names":["MainContainer","styled","div","Container","children","Header","header","Form","form","Button","button","ButtonLabel","span","Input","input","Searchbar","state","searchQuery","handleSubmitChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","this","type","Provider","color","size","autocomplete","autoFocus","placeholder","name","onChange","Component","fetchPixabayImages","currentPage","fetch","then","response","ok","json","Promise","reject","Error","Item","li","Img","img","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tags","onClick","largeImageURL","List","ul","ImageGallery","images","map","id","Overlay","ModalStyled","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","defaultProps","LoaderStyled","Loader","height","width","ButtonStyled","ButtonContainer","ErrorMessage","message","toastId","propTypes","PropTypes","string","App","isLoading","showModal","largeImage","handleOnSubmit","handleOnClick","prevState","getImages","a","data","hits","length","info","scrollOnLoadButton","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleGalleryItem","fullImageUrl","prevProps","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63f1f88a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const MainContainer = styled.div`\r\nmax-width: 1440px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\npadding-left: 15px;\r\npadding-right: 15px;\r\n\r\n`; ","import React from 'react';\r\nimport {MainContainer} from './Container.styled'\r\n\r\n\r\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\ntop: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  display: inline-block;\r\n\r\n  min-width: 180px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  border: 0;\r\n  \r\n  background-color: tomato;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n\r\n\r\n`;\r\nexport const ButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n\r\n\r\n`;\r\nexport const Input = styled.input`\r\ndisplay: inline-block;\r\nwidth: 100%;\r\nfont: inherit;\r\nfont-size: 20px;\r\nborder: none;\r\noutline: none;\r\npadding-left: 4px;\r\npadding-right: 4px;\r\n&::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n\r\n`;","import { Component } from 'react';\r\nimport { Header, Form, Button, ButtonLabel, Input } from './Searchbar.styled'\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MdFindReplace } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\n\r\n\r\n\r\nclass Searchbar extends Component {\r\n\r\n  state = {\r\n    searchQuery: \"\",\r\n  }\r\n\r\n  handleSubmitChange = (event) => {\r\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() })\r\n  };\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.searchQuery.trim() === \"\") {\r\n        toast.error('Введите Запрос.', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Header >\r\n        <Form onSubmit={this.handleSubmit} >\r\n          <Button type=\"submit\"  >\r\n            <IconContext.Provider value={{ color: \"ffffff\", size: \"2em\" }}>\r\n              <div>\r\n                <MdFindReplace />\r\n              </div>\r\n            </IconContext.Provider>\r\n\r\n\r\n\r\n            <ButtonLabel>Search</ButtonLabel>\r\n          </Button>\r\n\r\n          <Input\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"searchQuery\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleSubmitChange}\r\n\r\n          />\r\n        </Form>\r\n      </Header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","const API_KEY = '23744407-6e41977eb223c860dbad454a0';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nfunction fetchPixabayImages(searchQuery, currentPage) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка запроса попробуйте позже`));\r\n  });\r\n}\r\n\r\nexport default fetchPixabayImages;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\nborder-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n`;\r\n\r\n\r\nexport const Img = styled.img`\r\nwidth: 100%;\r\nheight: 260px;\r\nobject-fit: cover;\r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\nopacity: 1;\r\n\r\n&:hover,\r\n&:focus {\r\n  opacity: 0.9;\r\n  transform: scale(1.02);\r\n  cursor: zoom-in;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;","import PropTypes from 'prop-types';\r\nimport { Item, Img } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ image, onImageClick }) => {\r\n  const setFullImage = () => onImageClick(image.largeImageURL);\r\n\r\n  return (\r\n    <Item>\r\n      <Img src={image.webformatURL} alt={image.tags} onClick={setFullImage} />\r\n    </Item>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n  }),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport {List } from './ImageGalery.styled'\r\n\r\nconst ImageGallery = ({ images, onImageClick }) => (\r\n  <List >\r\n    {images.map(image => {\r\n           return (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image}\r\n          onImageClick={onImageClick}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","\r\nimport styled from '@emotion/styled';\r\nexport const Overlay =styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100vw;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: rgba(0, 0, 0, 0.8);\r\nz-index: 1200;\r\n`;\r\n\r\nexport const ModalStyled =styled.div`\r\nmax-width: calc(100vw - 48px);\r\nmax-height: calc(100vh - 24px);\r\n\r\n`;\r\n\r\n\r\n","import { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Overlay, ModalStyled } from './Modal.styled'\r\nimport { Component } from 'react';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        // console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        // console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n      }\r\n    \r\n      handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n          // console.log('Нажали ESC, нужно закрыть модалку');\r\n    \r\n          this.props.onClose();\r\n        }\r\n      };\r\n    \r\n      handleBackdropClick =event =>{\r\n        // console.log('Кликнули в бекдроп');\r\n        if(event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n      }\r\n\r\n\r\n    render()\r\n    {\r\nreturn(\r\n    createPortal (\r\n        <Overlay onClick={this.handleBackdropClick}>\r\n        <ModalStyled>{this.props.children}</ModalStyled>\r\n      </Overlay>,\r\n      modalRoot,\r\n        )\r\n);\r\n\r\n    }\r\n}\r\n\r\nModal.defaultProps = {\r\n      children: null,\r\n     };\r\n    \r\n     Modal.propTypes = {\r\n       children: PropTypes.node,\r\n       onClose: PropTypes.func.isRequired,\r\n     };\r\n\r\nexport default Modal;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const LoaderStyled =styled.div`\r\ndisplay: grid;\r\nplace-content: center;\r\n\r\n`;","import Template from 'react-loader-spinner';\r\nimport {Component} from 'react';\r\nimport {LoaderStyled} from './Loader.styled'\r\n\r\n\r\nclass Loader extends Component { \r\n   render() {\r\n     return (\r\n       <LoaderStyled>\r\n         <Template type=\"TailSpin\" color=\"#02be6e\" height={100} width={100} />\r\n       </LoaderStyled>\r\n     );\r\n   }\r\n }\r\n\r\nexport default Loader;","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n\r\nmargin: 0 auto;\r\n  margin-top: 20px;\r\n  width: 100px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    :focus {\r\n      background-color: #303f9f;\r\n    }\r\n\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\nmargin-bottom: 12px;\r\n`;\r\n\r\n","import propTypes from \"prop-types\";\r\nimport {ButtonStyled, ButtonContainer} from './Button.styled'\r\n\r\nfunction Button (props) {\r\n  return (\r\n    <ButtonContainer>\r\n\r\n<ButtonStyled \r\n    onClick={props.onClick}>\r\n      load more\r\n    </ButtonStyled>\r\n    </ButtonContainer>\r\n   \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nButton.propTypes = {\r\n  onClick: propTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\n// import { Message } from './ErrorMassage.styled';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ErrorMessage({ message }) {\r\n  // -------------------------------------------------------\r\n  const customId = 'custom-id-yes';\r\n  return toast.error(`${message}`, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    toastId: customId,\r\n  });\r\n  // ---------------------------------------------------\r\n  //     // <Message role=\"alert\">\r\n  //     //   <p>{message}</p>\r\n\r\n  //     // </Message>\r\n}\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Component } from 'react';\nimport Container from './component/Container/Container';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './component/Searchbar/Searchbar';\nimport fetchPixabayImages from './api/pixabay-api.jsx';\nimport ImageGallery from './component/ImageGallery/ImageGalery';\nimport Modal from './component/Modal/Modal';\nimport Loader from './component/Loader/Loader';\nimport Button from './component/Button/Button';\nimport ErrorMessage from './component/ErrorMessage/ErrorMasage';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    currentPage: 1,\n    isLoading: false,\n    images: [],\n    error: null,\n    showModal: false,\n    largeImage: '',\n  };\n\n  // Стартовый метод.\n  // Если при обновлении запрос не равен между стейтами, тогда делаем фетч\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.searchQuery !== this.state.searchQuery ||\n      prevState.currentPage !== this.state.currentPage\n    ) {\n      this.getImages();\n    }\n  }\n\n  // Принимаем с формы запрос и пишем в стейт + сбрасываем после отправки значения из стейта\n  handleOnSubmit = searchQuery => {\n    this.setState({\n      searchQuery,\n      images: [],\n      currentPage: 1,\n      error: null,\n    });\n  };\n\n  handleOnClick = () => {\n    this.setState(prevState => ({\n      currentPage: prevState.currentPage + 1,\n    }));\n  };\n\n  // Получаем дату из фетча\n  getImages = async () => {\n    const { currentPage, searchQuery } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    try {\n      const hits = await fetchPixabayImages(searchQuery, currentPage).then(\n        data => data.hits,\n      );\n\n      if (hits.length === 0) {\n        toast.info('Введите валидний запрос');\n      }\n\n      this.setState(prevState => ({\n        images: [...prevState.images, ...hits],\n      }));\n\n      if (currentPage !== 1) {\n        this.scrollOnLoadButton();\n      }\n    } catch (error) {\n      this.setState({\n        error,\n      });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n  //  Скролл при клике на кнопку\n  scrollOnLoadButton = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImage: '',\n    }));\n  };\n\n  // Получает полное изображение, пишет его в стейт и открывает модалку\n  handleGalleryItem = fullImageUrl => {\n    this.setState({\n      largeImage: fullImageUrl,\n      showModal: true,\n    });\n  };\n\n  render() {\n    const { images, isLoading, showModal, largeImage, error } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleOnSubmit} />\n\n        <ImageGallery images={images} onImageClick={this.handleGalleryItem} />\n\n        {!isLoading && images.length >= 12 && (\n          <Button onClick={this.handleOnClick} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt=\"\" className=\"Modal-image\" />\n          </Modal>\n        )}\n\n        {isLoading && <Loader />}\n        {error && <ErrorMessage message={error.message} />}\n\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}